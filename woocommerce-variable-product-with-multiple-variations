$product_data = [
    'type'               => 'variable',
    'name'               => "Product ".time(),
    'description'        => "Product Description",
    'short_description'  => "Product Short Description",
    'sku'                => rand(1000000,9999999),
    'regular_price'      => '100',
    'sale_price'         => '79',
    'reviews_allowed'    => true,
    'my_attribute'       => 'Product Attribute',
    'attributes'         =>  array(
                                array(
                                    'attributes' => array(
                                        sanitize_title('Product Attribute')  => 'Variation 9'
                                    ),
                                    'sku'           => rand(1000000,9999999),
                                    'regular_price' => rand(1000000,9999999),
                                    'sale_price'    => '',
                                    'stock_qty'     => 10,
                                ),
                                array(
                                    'attributes' => array(
                                        sanitize_title('Product Attribute')  => 'Variation 10'
                                    ),
                                    'sku'           => rand(1000000,9999999),
                                    'regular_price' => rand(1000000,9999999),
                                    'sale_price'    => '',
                                    'stock_qty'     => 10,
                                )
                            )
];

echo $product_id = create_products($product_data);


function create_products($product_data) {

    // START
    $product = get_page_by_title( $product_data['name'], OBJECT, 'product' );
    
    // check if the product already exists
    if (is_null($product)) {
    
        $post = array(
            'post_content'  => $product_data['description'],
            'post_status'   => "publish",
            'post_title'    => $product_data['name'],
            'post_type'     => "product"
        );
    
        $product_id = wp_insert_post( $post, false );
    
        $product = wc_get_product( $product_id );
    
    } else {
    
        $product = wc_get_product($product->ID);
    
    }
    
    $product->set_regular_price(5.00);
    $product->save();

    //IS VARIABLE PRODUCT
    if(!empty($product_data['attributes']))
    {
        wp_set_object_terms($product->get_id(), 'variable', 'product_type');

        $attributes         = wc_get_attribute_taxonomies();
    
        $slugs              = wp_list_pluck( $attributes, 'attribute_name' );

        $my_attribute       = $product_data['my_attribute'];

        $my_attribute_slug  = sanitize_title($my_attribute);
    
        if ( ! in_array( $my_attribute, $slugs ) ) {
    
            $args = array(
                'name'              => $my_attribute,
                'type'              => 'select',
                'orderby'           => 'menu_order',
                'has_archives'      => false,
            );

            $result = wc_create_attribute( $args );
    
        } 

        foreach($product_data['attributes'] as $variation_data)
        {
            create_product_variation(  $product->get_id(), $variation_data );
        }
        
    }

    return $product->get_id();
 
}


function create_product_variation( $product_id, $variation_data ){
    // Get the Variable product object (parent)
    $product = wc_get_product($product_id);

    $variation_post = array(
        'post_title'  => $product->get_name(),
        'post_name'   => 'product-'.$product_id.'-variation',
        'post_status' => 'publish',
        'post_parent' => $product_id,
        'post_type'   => 'product_variation',
        'guid'        => $product->get_permalink()
    );

    
    // Iterating through the variations attributes
    foreach ($variation_data['attributes'] as $attribute => $term_name )
    {

        // Creating the product variation
        $variation_id = wp_insert_post( $variation_post );

        // Get an instance of the WC_Product_Variation object
        $variation = new WC_Product_Variation( $variation_id );


        $taxonomy = 'pa_'.$attribute; // The attribute taxonomy

        // If taxonomy doesn't exists we create it (Thanks to Carl F. Corneil)
        if( ! taxonomy_exists( $taxonomy ) ){
            register_taxonomy(
                $taxonomy,
               'product_variation',
                array(
                    'hierarchical' => false,
                    'label' => ucfirst( $attribute ),
                    'query_var' => true,
                    'rewrite' => array( 'slug' => sanitize_title($attribute) ), // The base slug
                ),
            );
        }

        // Check if the Term name exist and if not we create it.
        if( ! term_exists( $term_name, $taxonomy ) )
            wp_insert_term( $term_name, $taxonomy ); // Create the term

        $term_slug = get_term_by('name', $term_name, $taxonomy )->slug; // Get the term slug

        // Get the post Terms names from the parent variable product.
        $post_term_names =  wp_get_post_terms( $product_id, $taxonomy, array('fields' => 'names') );

        // Check if the post term exist and if not we set it in the parent variable product.
        if( ! in_array( $term_name, $post_term_names ) )
            wp_set_post_terms( $product_id, $term_name, $taxonomy, true );

        
        $theData = array(
            $taxonomy => array(
                    'name'=> $taxonomy,
                    'value'=> $term_slug,
                    'is_visible' => '1',
                    'is_variation' => '1',
                    'is_taxonomy' => '1'
                )
        );
        

        update_post_meta( $product_id, '_product_attributes', $theData);

        // Set/save the attribute data in the product variation
        update_post_meta( $variation_id, 'attribute_'.$taxonomy, $term_slug );
    }

    ## Set/save all other data

    // SKU
    if( ! empty( $variation_data['sku'] ) )
        $variation->set_sku( $variation_data['sku'] );

    // Prices
    if( empty( $variation_data['sale_price'] ) ){
        $variation->set_price( $variation_data['regular_price'] );
    } else {
        $variation->set_price( $variation_data['sale_price'] );
        $variation->set_sale_price( $variation_data['sale_price'] );
    }
    $variation->set_regular_price( $variation_data['regular_price'] );

    // Stock
    if( ! empty($variation_data['stock_qty']) ){
        $variation->set_stock_quantity( $variation_data['stock_qty'] );
        $variation->set_manage_stock(true);
        $variation->set_stock_status('');
    } else {
        $variation->set_manage_stock(false);
    }
    
    $variation->set_weight(''); // weight (reseting)

    $variation->save(); // Save the data
}


